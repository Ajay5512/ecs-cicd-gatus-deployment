name: plan terraform changes

on:
  push:
    branches:
      - master
    paths:
      - terraform/**
      - '.github/workflows/**'

permissions:
  contents: read
  security-events: write
  id-token: write

jobs:
  applying-terraform-changes:
    runs-on: ubuntu-latest
    environment: production

    steps:

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Installing terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

# Also using trivy to scan terraform

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-iac-${{ hashFiles('terraform/**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-trivy-iac-

      - name: Trivy IaC scan (Terraform) - fail on HIGH/CRITICAL
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: config                
          scan-ref: ./terraform            
          format: table
          exit-code: '0'                   
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true           

      - name: Trivy IaC SARIF report
        if: always()
        uses: aquasecurity/trivy-action@0.24.0
        with:
          scan-type: config
          scan-ref: ./terraform
          format: sarif
          output: trivy-iac.sarif
          severity: 'CRITICAL,HIGH'
          ignore-unfixed: true

      - name: Upload SARIF to Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-iac.sarif
      
      - name: Initialize the terraform state file
        working-directory: ./terraform
        run: |
          terraform fmt -check -recursive
          terraform init 
          terraform validate

      - name: Plan
        working-directory: ./terraform
        run: |
          terraform plan -no-color -out plan.out
          terraform show -no-color plan.out > plan.txt

      - name: Uploading Plan
        uses: actions/upload-artifact@v4
        with:
          name: tf-plan
          path: |
            terraform/plan.out
            terraform/plan.txt


      - name: Show plan in job summary
        working-directory: ./terraform
        run: |
          {
            echo '## Terraform Plan'
            echo ''
            echo '```'
            sed -n '1,400p' plan.txt
            echo '```'
            echo ''
            echo '_Full plan attached as an artifact (tf-plan)._'
          } >> "$GITHUB_STEP_SUMMARY"

          
