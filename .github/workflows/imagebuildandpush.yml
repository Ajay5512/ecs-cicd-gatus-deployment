name: Build, Test and Push Gatus Image

on:
  push:
    branches:
      - master
    paths: 
      - 'GatusApp/**'
      - '.github/workflows/**'

permissions:
  contents: read
  security-events: write
  id-token: write

jobs: 
  build-and-push-ECR:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build the Docker Image
        run: |
          docker build -t gatus ./GatusApp

      - name: Cache Trivy DB
        uses: actions/cache@v4
        with:
          path: ~/.cache/trivy
          key: ${{ runner.os }}-trivy-${{ hashFiles('GatusApp/Dockerfile') }}
          restore-keys: |
            ${{ runner.os }}-trivy-

      - name: Trivy Image Scan (fail on HIGH/CRITICAL)
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: gatus:latest
          format: table
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Trivy SARIF Report
        if: always()
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: gatus:latest
          format: sarif
          output: trivy-results.sarif
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy SARIF to Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Testing the gatus container
        run: |
          docker run -d --rm -p 8080:8080 --name gatus-test gatus
          sleep 10
          curl --fail http://localhost:8080 > /dev/null || (echo "Gatus is not responding" && exit 1)
          echo "gatus is responding!"
          docker stop gatus-test

      - name: Tag Docker Image (Needs to be tagged with ECR URI for push)
        run: |
          docker tag gatus:latest ${{ secrets.ECR_REPOSITORY }}:latest

      - name: Push Docker Image onto ECR
        run: |
          docker push ${{ secrets.ECR_REPOSITORY }}:latest 